I brainstormed the types of projects I should be working on and decided to go with the coding route first.
My initial idea was to put 50 passwords inside a file and have Python list the top 5 strongest passwords,
separated by a dash with an encrypted version of themselves. 

Something like this:
S7$w$v5#akOL!B - Um/c6kZ3safE5omTUtmLIdJGrIxAmaixrabNc53hTnYJmvb6teRVhe1FzCmVpjsnRHMx0WJT/aaLvxIvOmxbywM+7osH01Kf5KTUZAis7ftHKulosMEOYALcYMkwgxdB

But I wasn't exactly sure how encrypting strings worked in Python, so I decided to hold off on that until
I've done the proper research to fully understand the topic.

Instead, I just decided to create a script that  → → → → → → → → → ↴
                                                                    ↓
------------------------------------------------------------------  ↓
# ~ Prints out the top 5 strongest passwords within a file      ⇐  ↲

# # CRITERIA
# - At least 12 characters long
# - Contains at least one uppercase and one lowercase letter
# - Includes at least one digit 
# - Has at least two special characters


# Tests every password to see if it meets the criteria
def PassEvaluate(password):
    HasUpper = False
    HasLower = False
    HasDigit = False
    HasSpecial = False

    specialCharacters = "!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~"
    specialCount = 0 

    # Returns false if there aren't at least 12 characters
    if len(password) < 12:
        return False
    
    # Returns true if there's at least one uppercase and one lowercase letter.
    for char in password:
        if char.isupper():
            HasUpper = True
        if char.islower():
            HasLower = True 

        # Incrementing the special character count
        if char in specialCharacters: 
            specialCount += 1
        if specialCount >= 2:
            HasSpecial = True

        # Returns True if there's at least 1 digit
        if char.isdigit():
            HasDigit = True
    
    # Check all criteria
    if HasUpper and HasLower and HasDigit and HasSpecial:
        return True
    else:
        return False
    
# Adds any password that meets the criteria into a list
def StrongPasswords(file_path):
    validPasswords = []

    with open(file_path, 'r') as PassList:
        for line in PassList:
            Password = line.strip()
            if PassEvaluate(Password):
                validPasswords.append(Password)
                                          
    return validPasswords

# Defining the path to the file containing the passwords and passing it to the StrongPasswords function
PassList = r'C:\Users\17609\Desktop\Python Scripts\50PWDs.txt' 
ValidPasswords = StrongPasswords(PassList)

if ValidPasswords:
    print("Valid Passwords:")
    for password in ValidPasswords:
        print(password)
else:
    print("No valid passwords found or file not found.")




Output - 
        Valid Passwords:
        A3x!t9zM$yQ#p7Lw
        vJ2!U6y*R#3tC^9k
        T#7m$F8*Q2rN^4&p
        fP6%N8&b#QzW1@oH
        Z@9&cR4*D^2mG1uO
------------------------------------------------------------------

While coding, there were some areas I got stuck at and had to do a bit of research in,
but I made sure to look at the most informative sources and actually break down what I learned, 
preventing the idea of just copying and pasting anything I found.